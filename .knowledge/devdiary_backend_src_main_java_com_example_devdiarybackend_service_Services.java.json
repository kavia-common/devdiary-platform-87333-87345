{"is_source_file": true, "format": "Java", "description": "This file contains multiple service class implementations in a Java backend application, particularly for user management, logs, summaries, integrations, activity feeds, and analytics. It defines key business services used across the application, with various public methods for handling user registration, login, profile retrieval, log entries, summaries, integrations, activity feeds, and analytics.", "external_files": ["com.example.devdiarybackend.domain.*", "com.example.devdiarybackend.repository.*", "com.example.devdiarybackend.security.JwtUtilProvider", "com.example.devdiarybackend.web.dto.*", "io.jsonwebtoken.Claims", "org.springframework.data.domain.Page", "org.springframework.data.domain.PageRequest", "org.springframework.security.core.userdetails.UserDetails", "org.springframework.security.core.userdetails.UserDetailsService", "org.springframework.security.core.userdetails.UsernameNotFoundException", "org.springframework.security.crypto.password.PasswordEncoder", "org.springframework.stereotype.Service"], "external_methods": ["org.springframework.security.core.userdetails.User.withUsername", "java.util.Optional.orElseThrow", "java.util.Map.of", "java.util.List.of", "java.time.OffsetDateTime.now", "java.time.LocalDate.atStartOfDay", "java.time.OffsetDateTime.plusDays", "java.util.stream.Collectors.toList"], "published": ["UserRepository", "LogEntryRepository", "SummaryRepository", "IntegrationRepository", "UserIntegrationRepository", "ActivityEventRepository", "AnalyticsDailyRepository", "User", "LogEntry", "Summary", "Integration", "UserIntegration", "ActivityEvent", "AnalyticsDaily", "UserProfileResponse", "LogEntryResponse", "PagedResponse", "SummaryResponse", "IntegrationResponse", "ActivityEventResponse", "AnalyticsDailyResponse", "RegisterRequest", "LoginRequest", "CreateLogEntryRequest", "ConnectIntegrationRequest"], "classes": [{"name": "UserDetailsServiceImpl", "description": "Implements UserDetailsService to load user-specific data for Spring Security authentication."}, {"name": "AuthService", "description": "Handles user registration, login, and retrieving current user information based on JWT tokens."}, {"name": "UserService", "description": "Provides user profile retrieval functionality."}, {"name": "LogEntryService", "description": "Manages creation and listing of user log entries."}, {"name": "SummaryService", "description": "Generates or retrieves daily summary reports based on log entries."}, {"name": "IntegrationService", "description": "Handles listing of integrations and connecting integrations to users."}, {"name": "ActivityService", "description": "Provides activity event feed for users."}, {"name": "AnalyticsService", "description": "Fetches analytics data over a date range for users."}], "methods": [{"name": "loadUserByUsername", "description": "Loads user details for security authentication by username (email)."}, {"name": "register", "description": "Registers a new user with email, display name, and password."}, {"name": "login", "description": "Authenticates a user and returns a JWT token."}, {"name": "currentUserFromToken", "description": "Retrieves the current user based on the provided JWT token."}, {"name": "getProfile", "description": "Returns user profile information based on email."}, {"name": "create", "description": "Creates a new log entry for a user."}, {"name": "listMine", "description": "Lists log entries for the user with pagination."}, {"name": "generateOrGet", "description": "Generates or retrieves a daily summary report for a user on a specified date."}, {"name": "listAll", "description": "Lists all available integrations."}, {"name": "connect", "description": "Connects a user to an integration."}, {"name": "feed", "description": "Provides a paginated activity event feed for a user."}, {"name": "range", "description": "Retrieves analytics data within a date range for a user."}], "calls": ["userRepository.findByEmail", "jwtUtilProvider.get().parse", "jwtUtilProvider.get().generateToken", "logEntryRepository.findByUserIdOrderByCreatedAtDesc", "summaryRepository.findByUserIdAndSummaryDate", "summaryRepository.save", "activityEventRepository.findByUserIdOrderByOccurredAtDesc", "analyticsDailyRepository.findByUserIdAndDateBetween", "integrationRepository.findAll", "integrationRepository.findByKey", "userIntegrationRepository.findByUserIdAndIntegrationId", "userRepository.findByEmail", "logEntryRepository.save", "logEntryRepository.findByUserIdOrderByCreatedAtDesc", "p.getContent", "p.getTotalElements", "p.getTotalPages"], "search-terms": ["AuthService", "UserDetailsServiceImpl", "SummaryService", "LogEntryService", "IntegrationService", "ActivityService", "AnalyticsService", "register", "login", "generateOrGet", "listAll", "connect", "feed", "range"], "state": 2, "file_id": 24, "knowledge_revision": 50, "git_revision": "", "hash": "cf99dcfb94495204948fe90a9fad4cf3", "format-version": 4, "code-base-name": "devdiary_backend", "filename": "devdiary_backend/src/main/java/com/example/devdiarybackend/service/Services.java", "revision_history": [{"50": ""}]}