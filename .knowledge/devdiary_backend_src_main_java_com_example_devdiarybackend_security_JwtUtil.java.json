{"is_source_file": true, "format": "Java", "description": "This file defines the JwtUtil class responsible for generating and parsing JSON Web Tokens (JWT) using the jjwt library. It includes methods for creating tokens with claims and validating tokens to extract claims, encapsulating JWT handling logic in the security package.", "external_files": ["io/jsonwebtoken/Claims", "io/jsonwebtoken/Jwts", "io/jsonwebtoken/SignatureAlgorithm", "java/time/Instant", "java/util/Date", "java/util/Map"], "external_methods": ["Jwts.builder()", "Jwts.parser()", "SignatureAlgorithm.HS256", "claim.setClaims()", "claim.setSubject()", "claim.setIssuedAt()", "claim.setExpiration()", "Jwts.parser().setSigningKey().parseClaimsJws()"], "published": ["com.example.devdiarybackend.security.JwtUtil"], "classes": [{"name": "JwtUtil", "description": "A utility class for generating and parsing JWT tokens with a secret key and expiration time."}], "methods": [{"name": "JwtUtil", "description": "Constructor initializing the JwtUtil with a secret key and time-to-live in seconds."}, {"name": "generateToken", "description": "Creates a JWT token for a given subject and claims, setting appropriate issued and expiration times."}, {"name": "parse", "description": "Parses a JWT token string and returns its claims after validating the signature."}], "calls": ["Jwts.builder()", "Jwts.parser()", "SignatureAlgorithm.HS256", "Jwts.builder().setClaims()", "Jwts.builder().setSubject()", "Jwts.builder().setIssuedAt()", "Jwts.builder().setExpiration()", "Jwts.builder().signWith()", "Jwts.parser().setSigningKey().parseClaimsJws()"], "search-terms": ["JwtUtil", "generateToken", "parse", "JWT", "token generation", "claims", "secret key"], "state": 2, "file_id": 20, "knowledge_revision": 43, "git_revision": "", "hash": "ed9c3fccfc078a8a52a0dc8e7a85e8cb", "format-version": 4, "code-base-name": "devdiary_backend", "filename": "devdiary_backend/src/main/java/com/example/devdiarybackend/security/JwtUtil.java", "revision_history": [{"43": ""}]}