{"is_source_file": true, "format": "Java", "description": "Unit test class for AuthService, testing registration, login, and token parsing logic.", "external_files": ["com/example/devdiarybackend/repository/UserRepository.java", "com/example/devdiarybackend/security/JwtUtil.java", "com/example/devdiarybackend/security/JwtUtilProvider.java", "com/example/devdiarybackend/web/dto/LoginRequest.java", "com/example/devdiarybackend/web/dto/RegisterRequest.java", "com/example/devdiarybackend/domain/User.java", "org.junit.jupiter.api.BeforeEach.java", "org.junit.jupiter.api.Test.java", "org.mockito.ArgumentCaptor.java", "org.springframework.security.crypto.password.PasswordEncoder.java"], "external_methods": ["org.mockito.Mockito.when()", "org.mockito.Mockito.verify()", "org.mockito.Mockito.mock()", "org.mockito.Mockito.never()", "org.junit.jupiter.api.Assertions.assertEquals()", "org.junit.jupiter.api.Assertions.assertThrows()", "org.junit.jupiter.api.Assertions.assertNotNull()", "org.junit.jupiter.api.Assertions.assertTrue()", "org.junit.jupiter.api.Assertions.assertFalse()"], "published": [], "classes": [{"name": "AuthServiceTest", "description": "Test class for AuthService focusing on registration, login, and token methods."}], "methods": [{"name": "setup", "description": "Initializes mocks and the AuthService instance before each test."}, {"name": "register_createsUser_whenEmailNotExists", "description": "Tests user registration flow when the email does not already exist."}, {"name": "register_throwsWhenEmailExists", "description": "Tests registration failure when the email is already registered."}, {"name": "login_returnsToken_whenCredentialsValid", "description": "Tests login returning a token when provided correct credentials."}, {"name": "login_throws_whenInvalidPassword", "description": "Tests login failure when password is invalid."}, {"name": "currentUserFromToken_parsesToken", "description": "Verifies token parsing and retrieving user from token."}], "calls": ["org.mockito.Mockito.when()", "org.mockito.Mockito.verify()", "org.mockito.Mockito.mock()", "org.mockito.Mockito.never()", "com.example.devdiarybackend.security.JwtUtil.generateToken()", "authService.register()", "authService.login()", "authService.currentUserFromToken()"], "search-terms": ["AuthServiceTest", "register_createsUser", "login_returnsToken", "currentUserFromToken", "JwtUtil", "UserRepository", "PasswordEncoder", "JwtUtilProvider"], "state": 2, "file_id": 31, "knowledge_revision": 67, "git_revision": "", "hash": "99d5558d2508b1f4139a57ab40dd5b95", "format-version": 4, "code-base-name": "devdiary_backend", "filename": "devdiary_backend/src/test/java/com/example/devdiarybackend/service/AuthServiceTest.java", "revision_history": [{"67": ""}]}