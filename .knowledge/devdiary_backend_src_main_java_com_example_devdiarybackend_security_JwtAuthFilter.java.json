{"is_source_file": true, "format": "Java", "description": "This file defines a Spring Security filter `JwtAuthFilter` that extracts JWT tokens from HTTP Authorization headers, validates them, and sets up authentication context accordingly.", "external_files": ["io.jsonwebtoken.Claims", "jakarta.servlet.FilterChain", "jakarta.servlet.ServletException", "jakarta.servlet.http.HttpServletRequest", "jakarta.servlet.http.HttpServletResponse", "org.springframework.http.HttpHeaders", "org.springframework.security.authentication.AbstractAuthenticationToken", "org.springframework.security.core.Authentication", "org.springframework.security.core.authority.SimpleGrantedAuthority", "org.springframework.security.core.context.SecurityContextHolder", "org.springframework.web.filter.OncePerRequestFilter"], "external_methods": ["jwtUtilProvider.get()", "Claims.getSubject()", "Claims.getOrDefault()", "List.stream()", "Stream.map()", "Collection.toList()"], "published": ["com.example.devdiarybackend.security.JwtAuthFilter"], "classes": [{"name": "JwtAuthFilter", "description": "A Spring Security filter that authenticates incoming requests based on JWT tokens present in the Authorization header."}], "methods": [{"name": "doFilterInternal", "description": "Overridden method that extracts the JWT token, validates it, and sets the authentication context if valid."}], "calls": ["request.getHeader", "jwtUtilProvider.get", "Claims.getSubject", "Claims.getOrDefault", "roles.stream", "SimpleGrantedAuthority.<init>", "SecurityContextHolder.getContext().setAuthentication", "filterChain.doFilter"], "search-terms": ["JwtAuthFilter", "Token extraction", "JWT validation", "Spring Security JWT filter", "Authorization header", "Claims parsing", "Role authorities", "Security context"], "state": 2, "file_id": 21, "knowledge_revision": 45, "git_revision": "", "hash": "58ee49302380098d04bc4d3791203219", "format-version": 4, "code-base-name": "devdiary_backend", "filename": "devdiary_backend/src/main/java/com/example/devdiarybackend/security/JwtAuthFilter.java", "revision_history": [{"45": ""}]}